﻿@using Recrutify.Models
@using Recrutify.DataAccessLayer.Data
@using Recrutify.DataAccessLayer.Repositories
@inject IBewerber<BewerberModel> bewerberData
@inject BewerberModel bewerberModel
@inject BewerberTestModel bewerberTestModel
@inject NavigationManager navigationManager
@inject IBewerberTest<BewerberTestModel> bewerberTestData
@inject TestModel testModel
@inject IUnternehmen<TestModel> unternehmenService


@page "/welcome/{tid:int}"

<PageTitle>Startseite</PageTitle>

<div style="height: calc(100vh - 200px); overflow-y: auto;">
    <h1>Einstellungstest @testModel.Name</h1>

    <img src="images/logo.png" height="200px" style="margin: 30px auto 5px auto; display: block;" />

    <p>
        Herzlich willkommen zum Einstellungstest @testModel.Name. Im Folgenden sollen Sie einige Fragen beantworten, damit wir Ihren Wissensstand prüfen können.
        <br />
        Sie haben <b>@testModel.Dauer Minuten</b> Zeit.
        <br />
        <br />
        Viel Erfolg!
    </p>

    <div class="mb-3" style="margin: 30px 40px 5px 40px;">
        <label for="FirstName" class="form-label">Vorname</label>
        <input @bind-value="@bewerberModel.Vorname" type="text" class="form-control" id="FirstName" placeholder="Max">
        <label for="LastName" class="form-label" style="margin-top: 20px;">Nachname</label>
        <input @bind-value="@bewerberModel.Nachname" type="text" class="form-control" id="LastName" placeholder="Mustermann">
    </div>
</div>

<div class="position-absolute bottom-0" style="display: grid; grid-template-columns: 1fr 2fr 1fr; align-items: center; height: 100px; width: 1280px; background-color: white; border-top: 1px solid lightgrey;">
    <div></div>
    <div></div>
    <button type="button" @onclick="start">Start</button>
</div>

@code {
    [Parameter]
    public int tid { get; set; }

    protected override async Task OnInitializedAsync()
    {
        testModel.Dauer = await unternehmenService.GetDauer(testModel.TID ?? 0);
    }

    //Test wird gestartet, Vor- und Nachname in die Datenbank abgespeichert und BID im Model gespeichert
    async void start()
    {
        int insertedID = await bewerberData.InsertVornameNachname(bewerberModel);
        bewerberModel.BID = insertedID;
        bewerberTestModel.BID = insertedID;

        System.Diagnostics.Debug.WriteLine("Bewerber ID=" + bewerberModel.BID);

        await bewerberTestData.InsertTIDandBID(bewerberTestModel);

        // Nutzer zur "/test"-Seite weiterleiten und TID verwenden
        navigationManager.NavigateTo($"/test/{bewerberTestModel.TID}");
    }
}