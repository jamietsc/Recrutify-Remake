@page "/adminlogin"

@using Recrutify.Pages
@using Recrutify.Models
@using Recrutify.DataAccessLayer.Data
@using Recrutify.DataAccessLayer.Repositories
@using Recrutify.DataAccessLayer.SqlDataAccess

@inject NavigationManager navigationManager
@inject AdminModel adminModel
@inject IAdmin<AdminModel> adminData

<h3>AdminPageLogin</h3>

<div class="mb-3" style="margin: 30px  40px 5px 40px;">
    <label for="Nutzername" class="form-label">Benutzername:</label>
    <input @bind-value="@adminModel.Benutzername" type="text" class="form-control" id="Nutzername" placeholder="Benutzername" />
    <label for="Passwort" class="form-label">Passwort:</label>
    <input @bind-value="@adminModel.Passwort" type="password" class="form-control" id="Passwort" placeholder="********" />
</div>

<div class="position-absolute bottom-0" style="display: grid; grid-template-columns: 1fr 2fr 1fr; align-items: center; height: 100px; width: 1280px; background-color: white; border-top: 1px solid lightgrey;">
    <div></div>
    <div></div>
    <button type="button" @onclick="checkLogin">Anmelden</button>
</div>

@code {
    //Überprüfen der Anmelde Daten, bei Erfolg weiterleiten
    async Task checkLogin()
    {
        bool result = await adminData.CheckCredentials(adminModel);
        if (result)
        {
            adminModel.UID = await adminData.GetUID(adminModel);
            navigationManager.NavigateTo("/admin");
        }
        else
        {
            System.Console.WriteLine("Anmeldedaten nicht vorhanden");
        }
    }
}