@*Ungenutzt/Veraltet*@
@page "/test2/{tid:int}"

@using Recrutify.Models
@using Recrutify.DataAccessLayer.Data
@using Recrutify.DataAccessLayer.Repositories
@inject HelperModel helperModel

<PageTitle>Einstellungstest</PageTitle>

@if (currentQuestion != null)
{
    <!-- Stellt aktuelle Frage des Typs MultipleChoice dar -->

    <h2>Frage @helperModel.currentFID: @currentQuestion.Fragentext</h2>

    <div @key="currentQuestion.FID">
        <div class="answer">
            <input class="form-check-input" type="checkbox" name="checkbox_@currentQuestion.FID" id="Answer1_@currentQuestion.FID" value="1" checked="@(currentQuestion.Gewaehlte_Antwort_1 == true)" @onchange="() => SetAnswer(currentQuestion, 1)">
            <label class="form-check-label" for="Answer1_@currentQuestion.FID">@currentQuestion.Antwort_1</label>
        </div>
        @if (currentQuestion.Antwort_2 != "")
        {
            <div class="answer">
                <input class="form-check-input" type="checkbox" name="checkbox_@currentQuestion.FID" id="Answer2_@currentQuestion.FID" value="2" checked="@(currentQuestion.Gewaehlte_Antwort_2 == true)" @onchange="() => SetAnswer(currentQuestion, 2)">
                <label class="form-check-label" for="Answer2_@currentQuestion.FID">@currentQuestion.Antwort_2</label>
            </div>
        }
        @if (currentQuestion.Antwort_3 != "")
        {
            <div class="answer">
                <input class="form-check-input" type="checkbox" name="checkbox_@currentQuestion.FID" id="Answer3_@currentQuestion.FID" value="3" checked="@(currentQuestion.Gewaehlte_Antwort_3 == true)" @onchange="() => SetAnswer(currentQuestion, 3)">
                <label class="form-check-label" for="Answer3_@currentQuestion.FID">@currentQuestion.Antwort_3</label>
            </div>
        }
        @if (currentQuestion.Antwort_4 != "")
        {
            <div class="answer">
                <input class="form-check-input" type="checkbox" name="checkbox_@currentQuestion.FID" id="Answer4_@currentQuestion.FID" value="4" checked="@(currentQuestion.Gewaehlte_Antwort_4 == true)" @onchange="() => SetAnswer(currentQuestion, 4)">
                <label class="form-check-label" for="Answer4_@currentQuestion.FID">@currentQuestion.Antwort_4</label>
            </div>
        }
    </div>
}
else
{
    //<button @onclick="ergebnis" class="btn btn-primary">Test abgeben</button>
    <p>Lade Fragen...</p>
}

@code {
    [Parameter]
    public MultipleChoiceModel currentQuestion { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //Console.WriteLine("MultipleChoice");
    }

    private void SetAnswer(MultipleChoiceModel multipleChoiceModel, int selectedAnswer)
    {
        switch(selectedAnswer)
        {
            case 1:
                multipleChoiceModel.Gewaehlte_Antwort_1 = !multipleChoiceModel.Gewaehlte_Antwort_1;
                break;

            case 2:
                multipleChoiceModel.Gewaehlte_Antwort_2 = !multipleChoiceModel.Gewaehlte_Antwort_2;
                break;

            case 3:
                multipleChoiceModel.Gewaehlte_Antwort_3 = !multipleChoiceModel.Gewaehlte_Antwort_3;
                break;

            case 4:
                multipleChoiceModel.Gewaehlte_Antwort_4 = !multipleChoiceModel.Gewaehlte_Antwort_4;
                break;
        }
    }
}
