@page "/"

@using Recrutify.Models
@using Recrutify.DataAccessLayer.Data
@using Recrutify.DataAccessLayer.Repositories
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@inject IBewerber<BewerberModel> bewerberData
@inject BewerberModel bewerberModel
@inject BewerberTestModel bewerberTestModel
@inject NavigationManager navigationManager
@inject IBewerberTest<BewerberTestModel> bewerberTestData
@inject TestModel testModel
@inject IUnternehmen<TestModel> unternehmenService

<PageTitle>Startseite</PageTitle>

<div style="height: calc(100vh - 200px); overflow-y: auto;">
    <h1>Herzlich willkommen</h1>

    <p>
        Bitte geben Sie den Einladungscode ein, den Sie vom Unternehmen erhalten haben.
    </p>

    <div class="mb-3" style="margin: 30px 40px 5px 40px;">
        <label for="Einladungscode" class="form-label">Einladungscode</label>
        <input @bind-value="@bewerberTestModel.TID" type="text" class="form-control" id="Einladungscode" placeholder="0" />
    </div>
</div>

<div class="position-absolute bottom-0" style="display: grid; grid-template-columns: 1fr 2fr 1fr; align-items: center; height: 100px; width: 1280px; background-color: white; border-top: 1px solid lightgrey;">
    <div></div>
    <div></div>
    <button type="button" @onclick="start">Weiter</button>
</div>

@* Container für fehlerhafte TID *@
<dialog id="modalWrongTID" style="border: 1px solid firebrick; border-radius: 5px;">
    <h2 style="margin: 10px;">Achtung!</h2>
    <p style="margin: 10px;">Der von Ihnen eingegebene Einladungscode ist ungültig. Bitte geben Sie einen gültigen Code ein.</p>
    <div style="display: grid; grid-template-columns: 1fr 1fr 1fr; align-items: center;">
        <div></div>
        <div></div>
        <button class="important" style="margin: 10px; justify-self: end;" onclick="document.getElementById('modalWrongTID').close()">Bestätigen</button>
    </div>
</dialog>


@code {
    //Einladungscode wird eingegeben und der Bewerber wird weitergeleitet
    //TID und UNternehmensnamen werden im Model gespeichert
    async void start() 
    {
        bool TIDexists = await unternehmenService.CheckTID(bewerberTestModel.TID ?? 0);
        if (TIDexists)
        {
            testModel.TID = bewerberTestModel.TID;
            testModel.UID = await unternehmenService.GetUIDFromTID(testModel.TID ?? 0);
            testModel.Name = await unternehmenService.GetName(testModel.UID);
            Console.WriteLine(testModel.UID);
            Console.WriteLine(testModel.Name);
            navigationManager.NavigateTo($"/welcome/{bewerberTestModel.TID}");
        } else
        {
            Console.WriteLine("TID existiert nicht");
            InvokeAsync(OpenWrongTIDModal);
        }

    }

    private async void OpenWrongTIDModal()
    {
        await JSRuntime.InvokeVoidAsync("OpenWrongTIDModal"); // JavaScript-Funktion aufrufen
    }
}
